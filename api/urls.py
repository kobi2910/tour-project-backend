from django.urls import path
from .views import api_home
from rest_framework.response import Response
from rest_framework.authtoken.views import ObtainAuthToken
from rest_framework.authtoken.models import Token


class CustomObtainAuthToken(ObtainAuthToken):
    """
    Custom class for obtaining authentication token.

    Overrides the post method to provide additional user details along with the token response.

    """

    def post(self, request, *args, **kwargs):
        """
                Post method to authenticate the user and provide the token.

                :param request: The request object.
                :param args: Additional arguments.
                :param kwargs: Additional keyword arguments.
                :return: A Response object with a JSON containing the user's authentication token and user details.
                """
            # Call to ObtainAuthToken.post can help us fetch the token generated for the
            # given username/password using the Django Rest Framework's inbuilt mechanism.
        response = super().post(request, *args, **kwargs)

        # Retrieve the User's token generated by Django Rest Framework's Token Authentication.
        token = Token.objects.get(key=response.data['token'])

        # Fetch the User associated with the retrieved Token
        user = token.user
        return Response({'token': token.key,
                         'user' : {
                          'user': user.username,
                          'is guide': user.is_guide,   
                          'user_id': user.id
                         } })
                          
                       


urlpatterns = [
    path('auth/', CustomObtainAuthToken.as_view()),
    path('',api_home )
]
